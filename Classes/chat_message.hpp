#ifndef CHAT_MESSAGE_HPP
#define CHAT_MESSAGE_HPP

#include <cstdio>
#include <cstdlib>
#include <cstring>

/**
* @brief server和client共用的数据包类\n
* 一条数据分为三部分：\n
* 1、字符串头的4个字节表示数据部分的长度，最大为9999，不足补0\n
* 2、字符串第五个字符表示命令类型，详见Client.h\n
* 3、字符串后面为命令内容
* 4、如：一条信息\t019b2player2|styisagay
* \t\t\t解读为这条命令共19个字符, 为一条ANSWER_FOR_ROOM命令, 表示\n
* \t\t\t这是房间内的第二个玩家, 角色为player2, 玩家名称为styisagay
*/

class chat_message
{
public:
	enum { header_length = 4 };
	enum { max_body_length = 512 };

	chat_message()
		: body_length_(0)
	{
	}

	const char* data() const
	{
		return data_;
	}

	char* data()
	{
		return data_;
	}

	size_t length() const
	{
		return header_length + body_length_;
	}

	const char* body() const
	{
		return data_ + header_length;
	}

	char* body()
	{
		return data_ + header_length;
	}

	size_t body_length() const
	{
		return body_length_;
	}

	void body_length(size_t new_length)
	{
		body_length_ = new_length;
		if (body_length_ > max_body_length)
			body_length_ = max_body_length;
	}

	/**
	* @brief 将报头的4字节字符串转换成数字
	*
	* @return 返回说明
	*        -<em>false</em> 转换出错，输入非法
	*        -<em>true</em> 成功编码，chat_message实例内的body_length已经成功编码
	*/

	bool decode_header()
	{
		using namespace std;
		char header[header_length + 1] = "";
		strncat(header, data_, header_length);
		body_length_ = atoi(header);
		if (body_length_ > max_body_length)
		{
			body_length_ = 0;
			return false;
		}
		return true;
	}

	/**
	* @brief 将字符串长度编码到编码头中
	*/

	void encode_header()
	{
		using namespace std;
		char header[header_length + 1] = "";
		sprintf(header, "%4d", body_length_);
		memcpy(data_, header, header_length);
	}

private:
	char data_[header_length + max_body_length];
	size_t body_length_;
}; 

#endif // CHAT_MESSAGE_HPP